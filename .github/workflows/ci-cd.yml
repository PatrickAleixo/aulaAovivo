name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up job
        run: echo "Setting up job..."

      - name: Checkout do Código
        uses: actions/checkout@v3

      - name: Instalar o Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configurar cache do Poetry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-

      - name: Instalar dependências
        run: poetry install --no-root

      - name: Rodar Testes com Pytest
        run: poetry run pytest

      - name: Verificar estilo com Flake8
        run: poetry run flake8 .

      - name: Verificar estilo com Pylint
        run: poetry run pylint .

      - name: Verificar Tipagem com Mypy
        run: poetry run mypy .

      - name: Analisar Complexidade com Radon
        run: poetry run radon cc . -a

      - name: Post Configurar cache do Poetry
        run: echo "Post step for Poetry cache configuration"

      - name: Post Checkout do Código
        run: echo "Post step for code checkout"

      - name: Complete job
        run: echo "Job completed"